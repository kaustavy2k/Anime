{"version":3,"sources":["List/list.js","Pages/Home.js","Pages/Login.js","Pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["List","React","memo","props","Fragment","className","Card","to","id","Body","Title","name","Text","descriptions","ListGroup","ListGroupItem","episodes_count","season_year","OverallRating","genres","join","trailer_url","Link","href","Home","initialRender","useRef","loadingRef","windowRef","useState","enteredFilter","setEnteredFilter","enteredList","setEnteredList","curr","maxpage","currmaxpage","setcurrmaxpage","condition","msg","loading","setloading","sloading","setsloading","title","description","isChecked","setisChecked","url","seturl","getName","names","pages","signal","ids","documents","axios","get","then","res","console","log","data","map","item","page","last_page","post","process","REACT_APP_API_URL","updated","rating","catch","err","useEffect","current","timer","setTimeout","clearTimeout","options","root","rootMargin","threshold","observer","IntersectionObserver","entities","isIntersecting","nextPage","observe","unobserve","displaylist","i","image","cover_image","titles","en","handleOnChange","e","target","value","active","spinner","Spinner","animation","variant","size","onChange","event","placeholder","prefix","SearchOutlined","type","checked","ref","Login","email","setemail","password","setpassword","setmsg","navigate","setnavigate","onSubmit","preventDefault","withCredentials","localStorage","setItem","JSON","stringify","user","_id","response","message","Signup","cpassword","setcpassword","setname","m","onClick","passwordConfirm","errors","Anime","lazy","App","ProtectedRoute","Component","element","getItem","fallback","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.728eba0a.chunk.js","sourcesContent":["import \"./list.css\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\nconst List = React.memo((props) => {\n  return (\n    <React.Fragment>\n      <div className=\"list\">\n        <Card>\n          <Link className=\"linkstyle\" to={`/anime/${props.id}`}>\n            <Card.Body>\n              <Card.Title>\n                <b>{props.name}</b>\n              </Card.Title>\n              <Card.Text>{props.descriptions}</Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>\n                <b>Episodes-</b> {props.episodes_count}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b>Year- </b>\n                {props.season_year}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b>Overall Avg Rating- </b>\n                {props.OverallRating}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b>Genres-</b> {props.genres.join(\", \")}\n              </ListGroupItem>\n            </ListGroup>\n            <br></br>\n          </Link>\n          {props.trailer_url ? (\n            <Card.Link href={`${props.trailer_url}`}>\n              Trailer- {props.trailer_url}\n            </Card.Link>\n          ) : (\n            \"\"\n          )}\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default List;\n","import \"./Home.css\";\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport List from \"../List/list\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { Spinner } from \"react-bootstrap\";\nfunction Home() {\n  let initialRender = useRef(false);\n  let loadingRef = useRef();\n  let windowRef = useRef();\n  const [enteredFilter, setEnteredFilter] = useState(\"\");\n  const [enteredList, setEnteredList] = useState([]);\n  const [currmaxpage, setcurrmaxpage] = useState({ curr: 1, maxpage: null });\n  const [loading, setloading] = useState({ condition: false, msg: \"Loading\" });\n  const [sloading, setsloading] = useState(false);\n  const [isChecked, setisChecked] = useState({\n    title: true,\n    genres: false,\n    description: false,\n  });\n  const [url, seturl] = useState(\"https://api.aniapi.com/v1/anime?title=\");\n\n  //fetch names\n  const getName = (names, pages, signal) => {\n    let ids, documents;\n    setloading({ condition: true, msg: \"Loading\" });\n    setsloading(true);\n    axios\n      .get(`${url}${names}&page=${pages}&per_page=20`)\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.data) {\n          ids = res.data.data.documents.map((item) => {\n            return item.id;\n          });\n          documents = res.data.data.documents;\n          if (signal) {\n            setEnteredList([...enteredList, ...res.data.data.documents]);\n            setcurrmaxpage((page) => ({ ...page, curr: pages }));\n          } else {\n            setEnteredList(res.data.data.documents);\n            setcurrmaxpage((page) => ({\n              curr: 1,\n              maxpage: res.data.data.last_page + 1,\n            }));\n            setloading({ condition: false, msg: \"Loading\" });\n          }\n          return axios.post(\n            `${process.env.REACT_APP_API_URL}/map-ratings/[${ids}]`\n          );\n        }\n      })\n      .then((res) => {\n        let updated = documents.map((item) => {\n          if (res.data.rating[item.id]) {\n            return { ...item, OverallRating: res.data.rating[item.id] };\n          } else {\n            return item;\n          }\n        });\n        setsloading(false);\n        setEnteredList([...enteredList, ...updated]);\n      })\n      .catch((err) => {\n        setsloading(false);\n        return;\n      });\n  };\n\n  //debouncing the api\n  useEffect(() => {\n    if (initialRender.current) {\n      if (enteredFilter) {\n        const timer = setTimeout(() => {\n          getName(enteredFilter, 1, 0);\n        }, 500);\n        return () => {\n          clearTimeout(timer);\n        };\n      } else {\n        setEnteredList([]);\n      }\n    } else {\n      initialRender.current = true;\n    }\n  }, [enteredFilter]);\n\n  //observer API\n  useEffect(() => {\n    let options = {\n      root: windowRef.current,\n      rootMargin: \"0px\",\n      threshold: 1.0,\n    };\n\n    const observer = new IntersectionObserver((entities, observer) => {\n      const first = entities[0];\n      if (first.isIntersecting) {\n        const nextPage = currmaxpage.curr + 1;\n        if (nextPage < currmaxpage.maxpage && enteredFilter) {\n          getName(enteredFilter, nextPage, 1);\n        } else {\n          setloading({ condition: false, msg: \"End of Results\" });\n        }\n      }\n    }, options);\n    observer.observe(loadingRef.current);\n    return () =>\n      loadingRef.current ? observer.unobserve(loadingRef.current) : \"\";\n  }, [enteredList, currmaxpage]);\n\n  let displaylist = enteredList.map((item, i) => {\n    return (\n      <List\n        key={i}\n        image={item.cover_image}\n        name={item.titles.en}\n        trailer_url={item.trailer_url}\n        descriptions={item.descriptions.en}\n        season_year={item.season_year}\n        episodes_count={item.episodes_count}\n        genres={item.genres}\n        id={item.id}\n        OverallRating={item.OverallRating ? item.OverallRating : \"---\"}\n      ></List>\n    );\n  });\n  let handleOnChange = (e) => {\n    if (e.target.value === \"title\") {\n      setisChecked({ title: true, genres: false, description: false });\n      seturl(\"https://api.aniapi.com/v1/anime?title=\");\n    } else if (e.target.value === \"genres\") {\n      setisChecked({ title: false, genres: true, description: false });\n      seturl(\"https://api.aniapi.com/v1/anime?genres=\");\n    } else {\n      setisChecked({ title: false, genres: false, description: true });\n      seturl(\"https://api.aniapi.com/v1/anime?description=\");\n    }\n  };\n  return (\n    <LoadingOverlay\n      active={sloading}\n      spinner={<Spinner animation=\"grow\" variant=\"primary\" size=\"lg\" />}\n    >\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <div className=\"heading\">\n            <h1>Anime Search</h1>\n          </div>\n          <div className=\"search\">\n            <Input\n              onChange={(event) => setEnteredFilter(event.target.value)}\n              size=\"large\"\n              placeholder=\"Search here\"\n              prefix={<SearchOutlined />}\n            />\n            <input\n              type=\"checkbox\"\n              value=\"title\"\n              className=\"boxes\"\n              checked={isChecked.title}\n              onChange={handleOnChange}\n            />\n            Title\n            <input\n              type=\"checkbox\"\n              value=\"genres\"\n              className=\"boxes\"\n              checked={isChecked.genres}\n              onChange={handleOnChange}\n            />\n            Genres\n            <input\n              className=\"boxes\"\n              type=\"checkbox\"\n              value=\"description\"\n              checked={isChecked.description}\n              onChange={handleOnChange}\n            />\n            Description\n          </div>\n          <div ref={windowRef} className=\"listings\">\n            {displaylist}\n            <div ref={loadingRef}>\n              <span>{loading.msg}...</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </LoadingOverlay>\n  );\n}\n\nexport default Home;\n","import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"./Login.css\";\nfunction Login() {\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [msg, setmsg] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [navigate, setnavigate] = useState(false);\n  let submitHandler = (e) => {\n    e.preventDefault();\n    const data = {\n      email: email,\n      password: password,\n    };\n    setloading(true);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/login`, data, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        localStorage.setItem(\n          \"isAuthenticated\",\n          JSON.stringify({\n            id: res.data.data.user._id,\n            email: res.data.data.user.email,\n          })\n        );\n        setnavigate(true);\n        setloading(false);\n      })\n      .catch((err) => {\n        setloading(false);\n        setmsg(err.response.data.message);\n      });\n  };\n  return (\n    <React.Fragment>\n      <LoadingOverlay\n        active={loading}\n        spinner={<Spinner animation=\"grow\" variant=\"primary\" size=\"lg\" />}\n      >\n        {navigate ? <Navigate to=\"/\" /> : \"\"}\n        <div className=\"auth-wrapper\">\n          <div className=\"auth-inner\">\n            <form onSubmit={submitHandler}>\n              <h3>Login</h3>\n\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Email\"\n                  onChange={(e) => setemail(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setpassword(e.target.value)}\n                />\n                <h5 className=\"display-error\">{msg}</h5>\n              </div>\n              <button className=\"btn btn-primary btn-block\">Login</button>\n              <Link to=\"/signup\" className=\"btn btn-danger btn-block\">\n                Signup\n              </Link>\n            </form>\n          </div>\n        </div>\n      </LoadingOverlay>\n    </React.Fragment>\n  );\n}\nexport default Login;\n","import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Signup.css\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Link, Navigate } from \"react-router-dom\";\nfunction Signup(props) {\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [cpassword, setcpassword] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [navigate, setnavigate] = useState(false);\n  const [msg, setmsg] = useState({ e: \"\", m: \"\" });\n  let submitHandler = (e) => {\n    const data = {\n      email: email,\n      password: password,\n      passwordConfirm: cpassword,\n      name: name,\n    };\n    setloading(true)\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/signup`, data, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        localStorage.setItem(\n          \"isAuthenticated\",\n          JSON.stringify({\n            id: res.data.data.user._id,\n            email: res.data.data.user.email,\n          })\n        );\n        setnavigate(true);\n        setloading(false)\n      })\n      .catch((err) => {\n        setloading(false)\n        let e = err.response.data.message.errors.email?.message;\n        let m = err.response.data.message.errors.passwordConfirm?.message;\n        setmsg({ e, m });\n      });\n  };\n  return (\n    <React.Fragment>\n      <LoadingOverlay\n        active={loading}\n        spinner={<Spinner animation=\"grow\" variant=\"primary\" size=\"lg\" />}\n      >\n        {navigate ? <Navigate to=\"/\" /> : \"\"}\n        <div className=\"auth-wrapper\">\n          <div className=\"auth-inner\">\n            <div>\n              <h3>SignUp</h3>\n\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Email\"\n                  onChange={(e) => setemail(e.target.value)}\n                />\n                <h5 className=\"display-error\">{msg.e}</h5>\n              </div>\n              <div className=\"form-group\">\n                <label>Name</label>\n                <input\n                  type=\"name\"\n                  className=\"form-control\"\n                  placeholder=\"Name\"\n                  onChange={(e) => setname(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setpassword(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Confirm Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setcpassword(e.target.value)}\n                />\n                <h5 className=\"display-error\">{msg.m}</h5>\n              </div>\n              <button\n                className=\"btn btn-primary btn-block\"\n                onClick={submitHandler}\n              >\n                SignUp\n              </button>\n              <Link to=\"/login\" className=\"btn btn-danger btn-block\">\n                Login\n              </Link>\n            </div>\n          </div>\n        </div>\n      </LoadingOverlay>\n    </React.Fragment>\n  );\n}\nexport default Signup;\n","import React, { Component, Suspense } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Login from \"./Pages/Login\";\nimport Signup from \"./Pages/Signup\";\nconst Anime = React.lazy(() => import(\"./Pages/Anime\"));\n\nfunction App() {\n  function ProtectedRoute({ element: Component }) {\n    const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n    return isAuthenticated ? Component : <Navigate to=\"/login\" />;\n  }\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route\n            path=\"/\"\n            element={<ProtectedRoute element={<Home />}></ProtectedRoute>}\n          />\n          <Route\n            path=\"/anime/:id\"\n            element={<ProtectedRoute element={<Anime />}></ProtectedRoute>}\n          />\n        </Routes>\n      </BrowserRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}